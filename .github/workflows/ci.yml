name: CI - Quality Gate & Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  legacy-detection:
    name: üö´ Legacy Code Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Check for any types
        run: |
          ! grep -r ": any" src/ --include="*.ts" --include="*.vue" || (echo "‚ùå any type detected!" && exit 1)
          ! grep -r "as any" src/ --include="*.ts" --include="*.vue" || (echo "‚ùå any assertion detected!" && exit 1)
          
      - name: Check for Vue Options API
        run: |
          ! grep -r "export default {" src/ --include="*.vue" || (echo "‚ùå Options API detected!" && exit 1)
          ! grep -r "Vue.component" src/ --include="*.ts" --include="*.js" || (echo "‚ùå Global Vue.component detected!" && exit 1)
          
      - name: Check for legacy imports
        run: |
          ! grep -r "import Vue from" src/ || (echo "‚ùå Vue 2 import detected!" && exit 1)
          ! grep -r "Vue.use" src/ || (echo "‚ùå Vue.use detected!" && exit 1)
          
      - name: Run custom legacy detector
        run: pnpm legacy-check

  quality-checks:
    name: üîç Code Quality
    runs-on: ubuntu-latest
    needs: legacy-detection
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: TypeScript type check
        run: pnpm typecheck
        
      - name: ESLint check
        run: pnpm lint
        
      - name: Prettier format check
        run: pnpm format --check

  tests:
    name: üß™ Tests
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run unit tests
        run: pnpm test
        
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium
        
      - name: Build application
        run: pnpm build
        
      - name: Run E2E tests
        run: pnpm test:e2e
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build-check:
    name: üèóÔ∏è Build Check
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build for production
        run: pnpm build
        
      - name: Check build output
        run: |
          ls -la dist/
          # „Éì„É´„Éâ„Çµ„Ç§„Ç∫„ÉÅ„Çß„ÉÉ„ÇØÔºà5MB‰ª•‰∏ãÔºâ
          BUILD_SIZE=$(du -sm dist | cut -f1)
          if [ $BUILD_SIZE -gt 5 ]; then
            echo "‚ùå Build size too large: ${BUILD_SIZE}MB (max: 5MB)"
            exit 1
          else
            echo "‚úÖ Build size OK: ${BUILD_SIZE}MB"
          fi